// Code generated by MockGen. DO NOT EDIT.
// Source: bvc/domain.go

// Package bvc is a generated GoMock package.
package bvc

import (
	gomock "github.com/golang/mock/gomock"
	models "github.com/julianespinel/mila-api/models"
	reflect "reflect"
	time "time"
)

// MockDomainMila is a mock of DomainMila interface
type MockDomainMila struct {
	ctrl     *gomock.Controller
	recorder *MockDomainMilaMockRecorder
}

// MockDomainMilaMockRecorder is the mock recorder for MockDomainMila
type MockDomainMilaMockRecorder struct {
	mock *MockDomainMila
}

// NewMockDomainMila creates a new mock instance
func NewMockDomainMila(ctrl *gomock.Controller) *MockDomainMila {
	mock := &MockDomainMila{ctrl: ctrl}
	mock.recorder = &MockDomainMilaMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockDomainMila) EXPECT() *MockDomainMilaMockRecorder {
	return m.recorder
}

// updateDailyStocks mocks base method
func (m *MockDomainMila) updateDailyStocks(date time.Time) error {
	ret := m.ctrl.Call(m, "updateDailyStocks", date)
	ret0, _ := ret[0].(error)
	return ret0
}

// updateDailyStocks indicates an expected call of updateDailyStocks
func (mr *MockDomainMilaMockRecorder) updateDailyStocks(date interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "updateDailyStocks", reflect.TypeOf((*MockDomainMila)(nil).updateDailyStocks), date)
}

// getCurrentDayStocks mocks base method
func (m *MockDomainMila) getCurrentDayStocks(country string) []models.Stock {
	ret := m.ctrl.Call(m, "getCurrentDayStocks", country)
	ret0, _ := ret[0].([]models.Stock)
	return ret0
}

// getCurrentDayStocks indicates an expected call of getCurrentDayStocks
func (mr *MockDomainMilaMockRecorder) getCurrentDayStocks(country interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "getCurrentDayStocks", reflect.TypeOf((*MockDomainMila)(nil).getCurrentDayStocks), country)
}
