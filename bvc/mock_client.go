// Code generated by MockGen. DO NOT EDIT.
// Source: bvc/client.go

// Package bvc is a generated GoMock package.
package bvc

import (
	gomock "github.com/golang/mock/gomock"
	models "github.com/julianespinel/mila-api/models"
	reflect "reflect"
	time "time"
)

// MockMilaClient is a mock of MilaClient interface
type MockMilaClient struct {
	ctrl     *gomock.Controller
	recorder *MockMilaClientMockRecorder
}

// MockMilaClientMockRecorder is the mock recorder for MockMilaClient
type MockMilaClientMockRecorder struct {
	mock *MockMilaClient
}

// NewMockMilaClient creates a new mock instance
func NewMockMilaClient(ctrl *gomock.Controller) *MockMilaClient {
	mock := &MockMilaClient{ctrl: ctrl}
	mock.recorder = &MockMilaClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockMilaClient) EXPECT() *MockMilaClientMockRecorder {
	return m.recorder
}

// GetStocksClosingDataByDate mocks base method
func (m *MockMilaClient) GetStocksClosingDataByDate(date time.Time) ([]models.Stock, error) {
	ret := m.ctrl.Call(m, "GetStocksClosingDataByDate", date)
	ret0, _ := ret[0].([]models.Stock)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetStocksClosingDataByDate indicates an expected call of GetStocksClosingDataByDate
func (mr *MockMilaClientMockRecorder) GetStocksClosingDataByDate(date interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetStocksClosingDataByDate", reflect.TypeOf((*MockMilaClient)(nil).GetStocksClosingDataByDate), date)
}
