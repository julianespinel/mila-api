// Code generated by MockGen. DO NOT EDIT.
// Source: bvc/client.go

// Package bvc is a generated GoMock package.
package bvc

import (
	gomock "github.com/golang/mock/gomock"
	models "github.com/julianespinel/mila-api/models"
	reflect "reflect"
	time "time"
)

// MockClientMila is a mock of ClientMila interface
type MockClientMila struct {
	ctrl     *gomock.Controller
	recorder *MockClientMilaMockRecorder
}

// MockClientMilaMockRecorder is the mock recorder for MockClientMila
type MockClientMilaMockRecorder struct {
	mock *MockClientMila
}

// NewMockClientMila creates a new mock instance
func NewMockClientMila(ctrl *gomock.Controller) *MockClientMila {
	mock := &MockClientMila{ctrl: ctrl}
	mock.recorder = &MockClientMilaMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockClientMila) EXPECT() *MockClientMilaMockRecorder {
	return m.recorder
}

// getStocksClosingDataByDate mocks base method
func (m *MockClientMila) getStocksClosingDataByDate(date time.Time) []models.Stock {
	ret := m.ctrl.Call(m, "getStocksClosingDataByDate", date)
	ret0, _ := ret[0].([]models.Stock)
	return ret0
}

// getStocksClosingDataByDate indicates an expected call of getStocksClosingDataByDate
func (mr *MockClientMilaMockRecorder) getStocksClosingDataByDate(date interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "getStocksClosingDataByDate", reflect.TypeOf((*MockClientMila)(nil).getStocksClosingDataByDate), date)
}
