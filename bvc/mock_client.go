// Code generated by MockGen. DO NOT EDIT.
// Source: bvc/client.go

// Package bvc is a generated GoMock package.
package bvc

import (
	reflect "reflect"
	time "time"

	gomock "github.com/golang/mock/gomock"
	models "github.com/julianespinel/mila-api/models"
)

// MockClientInterface is a mock of ClientInterface interface
type MockClientInterface struct {
	ctrl     *gomock.Controller
	recorder *MockClientInterfaceMockRecorder
}

// MockClientInterfaceMockRecorder is the mock recorder for MockClientInterface
type MockClientInterfaceMockRecorder struct {
	mock *MockClientInterface
}

// NewMockClientInterface creates a new mock instance
func NewMockClientInterface(ctrl *gomock.Controller) *MockClientInterface {
	mock := &MockClientInterface{ctrl: ctrl}
	mock.recorder = &MockClientInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockClientInterface) EXPECT() *MockClientInterfaceMockRecorder {
	return m.recorder
}

// getStocksClosingDataByDate mocks base method
func (m *MockClientInterface) getStocksClosingDataByDate(date time.Time) []models.Stock {
	ret := m.ctrl.Call(m, "getStocksClosingDataByDate", date)
	ret0, _ := ret[0].([]models.Stock)
	return ret0
}

// getStocksClosingDataByDate indicates an expected call of getStocksClosingDataByDate
func (mr *MockClientInterfaceMockRecorder) getStocksClosingDataByDate(date interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "getStocksClosingDataByDate", reflect.TypeOf((*MockClientInterface)(nil).getStocksClosingDataByDate), date)
}
